plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id "aspectj.AspectjGradlePlugin" version "0.0.8"
}

version = '0.1.0-24w01a'
group = 'usagitopia'
archivesBaseName = 'usagitopia'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    maven { url = 'https://maven.minecraftforge.net/' }
    maven { url = 'https://maven.parchmentmc.org' }
    maven { url = 'https://maven.eveoh.nl/content/repositories/releases' }
    maven { url = 'https://maven.aliyun.com/repository/public/' }
    maven { url = 'https://maven.aliyun.com/repository/gradle-plugin/' }
    mavenCentral()
    gradlePluginPortal()
    maven { url = 'https://plugins.gradle.org/m2/' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.3.2'

    minecraftLibrary (group: 'org.aspectj', name: 'aspectjrt', version: '1.9.19') {
        jarJar.pin(it, '1.9.19')
    }
    minecraftLibrary (group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.19') {
        jarJar.pin(it, '1.9.19')
    }
    minecraftLibrary (group: 'org.aspectj', name: 'aspectjtools', version: '1.9.19') {
        jarJar.pin(it, '1.9.19')
    }
}

jarJar.enable()

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2022.08.14-1.19.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'usagitopia'

            mods {
                usagitopia {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'usagitopia'

            mods {
                usagitopia {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'usagitopia'

            mods {
                usagitopia {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'usagitopia', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                usagitopia {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Usagitopia",
                "Specification-Vendor"    : "UPRPRC",
                "Specification-Version"   : project.version,
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "UPRPRC",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jarJar.fromRuntimeConfiguration()
jarJar {
    dependencies {
        include(dependency('org.aspectj:aspectjrt'))
        include(dependency('org.aspectj:aspectjweaver'))
        include(dependency('org.aspectj:aspectjtools'))
    }
}

publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
